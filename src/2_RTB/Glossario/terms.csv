Best Practices;Standard o set di linee guida che sono note per produrre un buon risultato, se seguite.
Way of Working;Il modo di organizzare al meglio le attività di progetto, in modo professionale.
Corsie di Stato;Contenitori di _Issue_ che le suddividono logicamente secondo il loro stato di avanzamento.
Sprint;Singolo periodo temporale, solitamente breve, per il quale sono fissati delle attività da portare a termine.
Workflow;Sistema per gestire processi ripetitivi e attività che necessitano di uno specifico ordine.
Quorum;Numero minimo accettabile di persone che possono prendere decisioni a nome del gruppo.
Amministratore Pubblico;Figura che opera nel settore pubblico responsabile della gestione delle risorse e dell'amministrazione dei servizi pubblici, relativamente ad una determinata regione geografica. 
Sensore;Dispositivo in grado di effettuare misurazioni relative al proprio dominio di interesse. Questi dati possono essere letti ed utilizzati dal sistema.
Real-Time;Aggettivo utillizzato per definire che un attività in risposta ad un evento avviene immediatamente,o con ritardi trascurabili. 
Attore;Entità esterna al sistema che interagisce con esso al fine di realizzare scopo specifico.
Cella;Termine utilizzato per indicare un area geografica risultante dalla divisione di un territorio tramite l'applicazione di un griglia. 
Test end-to-end;Test che valuta l'intero flusso dell'applicazione, in modo tale da verificare che tutti i componenti funzionino correttamente.
Documentazione;Insieme di documenti che forniscono spiegazioni su un determinato prodotto.
Sistema; Insieme organizzato di componenti interconnesse e interagenti, che lavorano per raggiungere un obiettivo comune o eseguire specifiche funzioni.
Deliverable; Ogni prodotto e servizio rilasciato o da rilasciare, include software e documentazione.
Bug; Errore, difetto o falla nel design, sviluppo o funzionamento del software informatico che provoca la produzione di risultati errati o inaspettati, o che fa comportare il software in modi non previsti.
Framework; Architettura logica di supporto sulla quale un software può essere progettato e realizzato, spesso facilitandone lo sviluppo da parte del programmatore.
PoC; Acronimo di Proof of Concept, indica un prototipo iniziale che verifica la fattibilita' tecnica di un prodotto dimostrandone alcune funzionalita' essenziali, e delineandone il potenziale di realizzazione.
MVP; Acronimo di Minimal Viable Product, indica una versione di prodotto che include solamente le funzionalità essenziali per soddisfare le esigenze iniziali degli utenti.
Design Pattern; Descrizione o modello logico da applicare per la risoluzione di un problema che può presentarsi in diverse situazioni durante le fasi di progettazione e sviluppo del software.
Daily Scrum; Breve riunione quotidiana nel framework Scrum, in cui il team di sviluppo si incontra per sincronizzarsi, pianificare le attività giornaliere e affrontare eventuali ostacoli nel percorso dello sviluppo del prodotto.
Data pipeline; Una data pipeline nell'ambito del data engineering è un flusso organizzato di processi che estraggono, trasformano e caricano i dati da diverse fonti verso un luogo di destinazione, spesso un sistema di archiviazione o un data warehouse. In modo conciso, potrebbe essere considerata come un "condotto" che gestisce il flusso dei dati attraverso diverse fasi.
Workshop; Un workshop interno, in un contesto di autoformazione all'interno di un gruppo, è un incontro organizzato per facilitare la condivisione e il trasferimento di conoscenze e competenze tra i membri del gruppo. Durante questo incontro, i partecipanti più esperti agiscono come formatori, condividendo le proprie competenze, esperienze e conoscenze con coloro che desiderano apprenderle.
Framework Scrum; Scrum è un framework agile per la gestione di progetti e lo sviluppo di prodotti. Si basa su un approccio iterativo e incrementale, organizzando il lavoro in cicli chiamati "sprint". Ogni sprint ha una durata fissa (solitamente da 2 a 4 settimane) e produce un incremento di prodotto funzionante. Le attività sono suddivise in compiti gestiti da un team auto-organizzato, con riunioni regolari per la pianificazione, la revisione e il miglioramento continuo del processo.
Product backlog; Il Product Backlog in Scrum rappresenta una lista prioritizzata di tutte le funzionalità, miglioramenti e lavori futuri che potrebbero essere, potenzialmente, inclusi in un prodotto. In modo conciso, potrebbe essere considerato come una lista di "cose da fare" per il progetto. Questa lista è dinamica e viene continuamente aggiornata e rifinita. Durante gli Sprint Planning Meetings, il team seleziona gli elementi dal Product Backlog per lo sviluppo durante lo Sprint corrente, dando vita allo Sprint Backlog.
Sprint backlog; Lo Sprint Backlog è una lista di compiti specifici che il team di sviluppo ha pianificato per un singolo Sprint in Scrum. Questa lista deriva direttamente dagli elementi prioritari del Product Backlog, selezionati per essere affrontati durante lo Sprint. In modo conciso, lo Sprint Backlog è una sorta di "to-do list", contenente le attività che il team si impegna a completare durante uno specifico periodo di Sprint,  di solito con una durata fissata (come due o quattro settimane). Durante lo Sprint Planning Meeting, il team seleziona gli elementi prioritari dal Product Backlog, li suddivide in compiti più piccoli, e li inserisce nello Sprint Backlog. Lo Sprint Backlog è dinamico e può essere adattato durante lo Sprint, ma una volta iniziato lo Sprint, la lista rimane stabile senza l'aggiunta di nuovi elementi. L'obiettivo è consegnare un incremento di prodotto funzionante alla fine di ogni Sprint.
Design patterns; I design patterns (modelli di progettazione) nell'ambito del software engineering sono soluzioni ricorrenti a problemi comuni che si presentano durante la progettazione del software. Questi pattern forniscono un approccio collaudato e riconosciuto per affrontare situazioni specifiche, offrendo una guida ai progettisti e sviluppatori nel risolvere problemi ricorrenti in modo efficiente e robusto. Essi fungono da astrazioni di alto livello che catturano le migliori pratiche per la progettazione di software, promuovendo la riusabilità del codice, la manutenibilità e la scalabilità del sistema. 
Rebase workflow; Il workflow di rebase in GitHub è una pratica che coinvolge la riorganizzazione della storia di un branch prima di integrarlo nel branch principale (solitamente "main" o "master"). Invece di unire direttamente i cambiamenti, come avviene con un merge, il rebase riscrive la storia del branch, applicando ogni singolo commit uno dopo l'altro nel branch di destinazione. Questo processo  crea una storia più lineare e pulita, poiché i commit del branch di funzione sembreranno essere stati sviluppati direttamente sulla cima del branch principale. 
Corsia; In un contesto di Kanban board, il termine "corsia" si riferisce a una colonna o a una fila visuale sulla bacheca che rappresenta uno stato o una fase specifica del flusso di lavoro. Le corsie sono utilizzate per organizzare e visualizzare le attività in base al loro stato corrente nel processo di lavoro.
Requirements and technology baseline; Nel contesto dell'ingegneria del software è una fase iniziale e fondamentale del processo di sviluppo del software. In questa fase, l'obiettivo principale è stabilire e comprendere i requisiti del sistema e definire la base tecnologica sulla quale il progetto si svilupperà. Le tre principali attività di questa fase sono: l'analisi dei requisiti, la definizione della baseline tecnologica e la definizione della baseline di progetto.
Customer acceptance; È l'ultima fase del ciclo di vita del software, coinvolgendo la presentazione del prodotto finito al cliente per valutazione e approvazione. Durante questa fase, il cliente esamina attentamente il software rispetto ai requisiti concordati e alle aspettative iniziali. I test di accettazione vengono eseguiti per garantire che il prodotto soddisfi le specifiche richieste. L'obiettivo è ottenere l'approvazione del cliente e la consegna del prodotto in un ambiente operativo. Una volta accettato dal cliente, il software è pronto per l'utilizzo e la distribuzione.
Product baseline; È una fase cruciale nel ciclo di sviluppo del software. Durante questa fase, il focus si sposta dall'analisi dei requisiti e dalla progettazione concettuale all'implementazione e alla costruzione effettiva del prodotto software. Le attività principali comprendono la scrittura del codice, i test unitari e l'integrazione di componenti software. L'obiettivo è raggiungere una versione stabile e funzionante del prodotto che rappresenti la base per ulteriori sviluppi e miglioramenti.
Milestone; Rappresenta un punto chiave o un traguardo significativo nel corso di un progetto. Si tratta di un evento temporale specifico che indica il completamento di una fase importante, l'implementazione di una funzionalità critica, o il raggiungimento di un obiettivo prestabilito. Le milestone sono utilizzate per valutare il progresso del progetto, sincronizzare le attività del team e fornire punti di riferimento per la pianificazione temporale complessiva. Spesso, le milestone sono associate a risultati tangibili o decisioni cruciali che influenzano il percorso futuro del progetto.
Baseline; Una "baseline" rappresenta una configurazione stabile e controllata di un sistema o di un prodotto in un determinato momento del suo ciclo di vita. Può includere specifiche tecniche, documentazione, codice sorgente, o qualsiasi altro elemento critico che definisce le caratteristiche e le funzionalità del sistema. Le baseline forniscono un punto di riferimento chiave per valutare eventuali modifiche, monitorare il progresso e garantire la coerenza nel corso del tempo.
Context switch; All'interno di un team di sviluppo del software, si riferisce al problema che sorge quando i membri del team devono cambiare improvvisamente il loro focus da un compito o una responsabilità ad un altro. Questo fenomeno è spesso causato da una rotazione frequente dei ruoli all'interno del team.
User stories; Una "user story" è una breve descrizione narrativa di una funzionalità o un requisito di sistema, espressa dal punto di vista dell'utente. Solitamente, è scritta in linguaggio naturale.
ITS; Un Issue Tracking System è uno strumento software utilizzato per la gestione e il tracciamento delle problematiche (issues) durante lo sviluppo di progetti o la manutenzione di software. Questo sistema consente di registrare, monitorare e gestire le segnalazioni di problemi, bug, miglioramenti e altre attività correlate al software. Gli ITS facilitano la comunicazione tra i membri del team di sviluppo e gli stakeholder, contribuendo a garantire che le problematiche siano affrontate in modo organizzato e che il progresso nella loro risoluzione sia tracciato in modo efficace.
Sprint retrospective; Attività ricorrente nel contesto della metodologia Agile, in particolare nel framework Scrum. Si tratta di una riunione che si tiene alla fine di ogni sprint (iterazione di sviluppo) durante la quale il team di sviluppo riflette sulle attività svolte durante lo sprint appena concluso. L'obiettivo principale della Sprint Retrospective è identificare cosa è andato bene, cosa può essere migliorato e quali azioni possono essere intraprese per ottimizzare il processo di sviluppo nel futuro.
Sprint review; Evento fondamentale all'interno della metodologia Agile, specialmente nel contesto del framework Scrum. Si tratta di una riunione che si tiene alla fine di ogni sprint (iterazione di sviluppo) durante la quale il team di sviluppo presenta il lavoro completato durante lo sprint agli stakeholder, al product owner e ad altri membri interessati. Durante la Sprint Review, vengono esaminati i risultati ottenuti e si discute il progresso verso gli obiettivi dell'iterazione. È un'opportunità per raccogliere feedback, valutare il prodotto e adattare le priorità in vista degli sprint successivi.
Materialized views; Rappresentano copie fisiche di dati risultanti da una query di selezione predefinita. A differenza delle viste standard, che eseguono la query ogni volta che vengono richiamate, le viste materializzate memorizzano fisicamente i dati calcolati dalla query in un'apposita struttura di archiviazione. Ciò consente un accesso rapido ai dati pre-calcolati, migliorando le prestazioni delle query che coinvolgono operazioni complesse o intensive.
Retention policy; In Kafka, una "retention policy" (politica di conservazione) si riferisce alle regole e alle impostazioni che determinano per quanto tempo i messaggi devono essere conservati all'interno di un topic. Questa politica definisce la durata massima per cui i dati saranno mantenuti prima di essere eliminati automaticamente dal sistema. La retention policy è cruciale per gestire lo spazio di archiviazione e garantire che Kafka mantenga solo i dati necessari per il periodo di tempo desiderato. 
Batch; In Kafka, un "batch" si riferisce a un insieme o a un gruppo di messaggi che vengono trattati e inviati insieme in una singola operazione. L'utilizzo di batch è un'ottimizzazione di prestazioni che consente di aggregare più messaggi in una singola unità di lavoro, riducendo il carico operativo e migliorando l'efficienza della trasmissione di dati all'interno di un sistema Kafka.
Broker; In Kafka, un "broker" è un nodo individuale all'interno di un cluster Kafka responsabile della gestione e dell'elaborazione dei dati. Ogni broker svolge il ruolo di server Kafka e contribuisce al mantenimento e al funzionamento del sistema.
Topic; In Apache Kafka, un "topic" è una categoria o una suddivisione logica dei dati che consente di organizzare e suddividere i flussi di messaggi. I topic sono fondamentali nel modello di pubblicazione/sottoscrizione di Kafka, dove i produttori inviano messaggi a specifici topic e i consumatori si sottoscrivono a tali topic per ricevere i messaggi di loro interesse.
Architettura; Definizione della struttura, dei componenti e delle interazioni fondamentali del sistema. 
Smart City; area urbana che implementa tecnologie avanzate per gestire in modo intelligente le risorse e creare un ambiente di vita più sostenibile, efficiente e abitabile.
Time series; (In italiano "serie storica") formato che rappresenta dati organizzati sequenzialmente in base al tempo, dove ogni punto dati è associato a un timestamp o a un intervallo temporale specifico.
Spreadsheet; applicazione software che organizza dati in una tabella, utilizzata per gestire, manipolare e analizzare dati numerici o testuali, consentendo operazioni di calcolo, formattazione e rappresentazione visiva dei dati.
Repository; spazio di archiviazione digitale, spesso utilizzato nel contesto dello sviluppo software, dove vengono conservati e gestiti file, documenti, codice sorgente o altri dati correlati a un progetto.
Walkthrough; esaminazione approfondita di un documento o codice, senza l'uso di una checklist predefinita. Durante questa revisione, ci si concentra sul contenuto per individuare e correggere errori, mettendo in risalto aspetti critici e identificando potenziali problematiche senza seguire rigidi parametri di valutazione.
Typst; Strumento software, fortemente ispirato a LaTex, che permette di redarre documenti, potendo integrare script all'interno di essi.
Serie storica; Un grafico a serie storica è una rappresentazione visiva dei dati nel tempo, dove sull'asse x sono indicati gli intervalli temporali e sull'asse y sono rappresentati i valori corrispondenti. Questo tipo di grafico è utilizzato per analizzare e visualizzare tendenze, pattern o variazioni nei dati nel corso del tempo.
Side effect; Un "side effect" intenzionale rappresenta una conseguenza volutamente provocata come parte di un processo, trattamento o azione. In questo contesto, l'effetto collaterale è attentamente pianificato e incorporato per raggiungere specifici obiettivi o risultati desiderati come conseguenza però di un'azione principale.
Ordinamento lessicografico; L'ordinamento lessicografico è un metodo di ordinamento in cui gli elementi vengono disposti in base all'ordine lessicale delle loro rappresentazioni. In altre parole, gli oggetti vengono ordinati come parole in un dizionario, dove le lettere o i caratteri sono considerati in sequenza per determinare la posizione relativa degli elementi nell'ordine.
Pannelli; I "pannelli" in un contesto di interfaccia dashboard sono blocchi o aree visuali distinte che presentano informazioni specifiche o visualizzano dati relativi a un determinato aspetto. Ogni pannello può contenere grafici, tabelle o altri elementi che consentono agli utenti di monitorare e analizzare dati in modo separato e focalizzato all'interno di una schermata complessiva.
Timestamp; Un "timestamp" è una marca temporale che rappresenta la data e l'orario di un evento specifico. Solitamente espresso come combinazione di data e ora, il timestamp fornisce un riferimento preciso nel tempo per registrare quando si è verificato un determinato evento o quando è stata effettuata un'azione.
Dashboard; Una "dashboard" nel contesto della visualizzazione dati è un'interfaccia grafica che presenta in modo chiaro e conciso informazioni chiave e metriche attraverso vari elementi visivi come grafici, tabelle e indicatori. Le dashboard sono progettate per consentire agli utenti di monitorare rapidamente e comprendere lo stato e le tendenze dei dati rilevanti in un'unica panoramica, facilitando la presa di decisioni informate.
Modello a V; modello di sviluppo software, che struttura le fasi dello sviluppo in una forma a V. Il modello vuole mettere in luce i legami esistenti tra la fase di sviluppo e la fase di verifica e illustrare l'importanza dell'elaborazione dei casi di test in contemporanea alle altre fasi dello sviluppo.
Inspection; esaminazione sistematica di un documento o codice, attraverso l'uso di checklist predefinite. Durante questa revisione, l'attenzione è rivolta ad attestare che l'oggetto sia conforme ai criteri stabiliti ed  a confermare l'assenza di errori.
