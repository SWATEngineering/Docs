Best Practices;Standard o set di linee guida che sono note per produrre un buon risultato, se seguite.
Way of Working;Il modo di organizzare al meglio le attività di progetto, in modo professionale.
Corsie di Stato;Contenitori di _Issue_ che le suddividono logicamente secondo il loro stato di avanzamento.
Sprint;Singolo periodo temporale, solitamente breve, per il quale sono fissati delle attività da portare a termine.
Workflow;Sistema per gestire processi ripetitivi e attività che necessitano di uno specifico ordine.
Quorum;Numero minimo accettabile di persone che possono prendere decisioni a nome del gruppo.
Amministratore Pubblico;Figura che opera nel settore pubblico responsabile della gestione delle risorse e dell'amministrazione dei servizi pubblici. 
Sensore;Dispositivo elettronico in grado di rilevare e misurare diverse tipologie di grandezze.
Real-Time;Aggettivo utillizzato per definire che un attività in risposta ad un evento avviene immediatamente,o con ritardi trascurabili. 
Attore;Entità esterna al sistema che interagisce con esso al fine di realizzare scopo specifico.
Cella;Termine utilizzato per indicare un area geografica risultante dalla divisione di un territorio tramite l'applicazione di un griglia. 
Stato di un Sensore;Parametro che indica se il sensore è attivo e funzionante, se è inattivo o se ha un problema.
Dati aggregati;Ricostruzione sintetica, fatta a partire da un insieme di dati, utile a fornirne un'interpretazione più comprensibile.
Test end-to-end;Test che valuta l'intero flusso dell'applicazione, in modo tale da verificare che tutti i componenti funzionino correttamente.
Documentazione;Insieme di documenti che forniscono spiegazioni su un determinato prodotto.
Sistema; Insieme organizzato di componenti interconnesse e interagenti, che lavorano per raggiungere un obiettivo comune o eseguire specifiche funzioni.
Deliverable; Ogni prodotto e servizio rilasciato o da rilasciare, include software e documentazione.
Bug; Errore, difetto o falla nel design, sviluppo o funzionamento del software informatico che provoca la produzione di risultati errati o inaspettati, o che fa comportare il software in modi non previsti.
Framework; Architettura logica di supporto sulla quale un software può essere progettato e realizzato, spesso facilitandone lo sviluppo da parte del programmatore.
PoC; Acronimo di Proof of Concept, indica un prototipo iniziale che verifica la fattibilita' tecnica di un prodotto dimostrandone alcune funzionalita' essenziali, e delineandone il potenziale di realizzazione.
MVP; Acronimo di Minimal Viable Product, indica una versione di prodotto che include solamente le funzionalità essenziali per soddisfare le esigenze iniziali degli utenti.
Design Pattern; Descrizione o modello logico da applicare per la risoluzione di un problema che può presentarsi in diverse situazioni durante le fasi di progettazione e sviluppo del software.
Daily Scrum; Breve riunione quotidiana nel framework Scrum, in cui il team di sviluppo si incontra per sincronizzarsi, pianificare le attività giornaliere e affrontare eventuali ostacoli nel percorso dello sviluppo del prodotto.
Data pipeline; Una data pipeline nell'ambito del data engineering è un flusso organizzato di processi che estraggono, trasformano e caricano i dati da diverse fonti verso un luogo di destinazione, spesso un sistema di archiviazione o un data warehouse. In modo conciso, potrebbe essere considerata come un "condotto" che gestisce il flusso dei dati attraverso diverse fasi.
Workshop; Un workshop interno, in un contesto di autoformazione all'interno di un gruppo, è un incontro organizzato per facilitare la condivisione e il trasferimento di conoscenze e competenze tra i membri del gruppo. Durante questo tipo di workshop, i partecipanti più esperti agiscono come formatori, condividendo le proprie competenze, esperienze e conoscenze con coloro che desiderano apprenderle.
Framework Scrum; Scrum è un framework agile per la gestione di progetti e lo sviluppo di prodotti. Si basa su un approccio iterativo e incrementale, organizzando il lavoro in cicli chiamati "sprint". Ogni sprint ha una durata fissa (solitamente da 2 a 4 settimane) e produce un incremento di prodotto funzionante. Le attività sono suddivise in compiti gestiti da un team auto-organizzato, con riunioni regolari per la pianificazione, la revisione e il miglioramento continuo del processo.
Product backlog; Il Product Backlog in Scrum è una lista prioritizzata di tutte le funzionalità, miglioramenti e lavori futuri che potrebbero essere inclusi in un prodotto. In modo conciso, potrebbe essere considerato come una lista di "cose da fare" per il progetto. Questa lista è dinamica e viene continuamente aggiornata e rifinita. Durante gli Sprint Planning Meetings, il team seleziona gli elementi dal Product Backlog per essere sviluppati durante lo Sprint corrente, creando così lo Sprint Backlog.
Sprint backlog; Lo Sprint Backlog è una lista di compiti specifici che il team di sviluppo ha pianificato per un singolo Sprint in Scrum. Questa lista deriva direttamente dagli elementi prioritari del Product Backlog, che sono stati selezionati per essere affrontati durante lo Sprint. In modo conciso, lo Sprint Backlog è una sorta di "to-do list" che contiene le attività che il team si impegna a completare durante uno specifico periodo di Sprint, che di solito ha una durata fissa (come due o quattro settimane). Durante lo Sprint Planning Meeting, il team seleziona gli elementi prioritari dal Product Backlog e li suddivide in compiti più piccoli, che vengono poi inseriti nello Sprint Backlog. Lo Sprint Backlog è dinamico e può essere adattato durante lo Sprint, ma una volta che inizia uno Sprint, la lista rimane stabile e non vengono aggiunti nuovi elementi. L'obiettivo è consegnare un incremento di prodotto funzionante alla fine di ogni Sprint.
Design patterns; I design patterns (modelli di progettazione) nell'ambito del software engineering sono soluzioni ricorrenti a problemi comuni che si presentano durante la progettazione del software. Questi pattern forniscono un approccio collaudato e riconosciuto per affrontare situazioni specifiche, offrendo una guida ai progettisti e sviluppatori nel risolvere problemi ricorrenti in modo efficiente e robusto.
Rebase workflow; Il workflow di rebase in GitHub è una pratica che coinvolge la riorganizzazione della storia di un branch prima di integrarlo nel branch principale (solitamente "main" o "master"). Invece di unire direttamente i cambiamenti, come avviene con un merge, il rebase riscrive la storia del branch, applicando ogni singolo commit uno dopo l'altro nel branch di destinazione. Questo processo può creare una storia più lineare e pulita, poiché i commit del branch di funzione sembreranno essere stati sviluppati direttamente sulla cima del branch principale. 
Corsia; In un contesto di Kanban board, il termine "corsia" si riferisce a una colonna o a una fila visuale sulla bacheca che rappresenta uno stato o una fase specifica del flusso di lavoro. Le corsie sono utilizzate per organizzare e visualizzare le attività in base al loro stato corrente nel processo di lavoro.
